import dbaccess.Spitter;import dbaccess.SpitterDAO;import junit.framework.Assert;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.factory.annotation.Qualifier;import org.springframework.jdbc.core.simple.SimpleJdbcTemplate;import org.springframework.test.context.ActiveProfiles;import org.springframework.test.context.ContextConfiguration;import org.springframework.test.context.testng.AbstractTestNGSpringContextTests;import org.testng.annotations.AfterClass;import org.testng.annotations.BeforeClass;import org.testng.annotations.Test;/** * Created with IntelliJ IDEA. * User: jicui * Date: 1/5/14 * Time: 11:10 AM * To change this template use File | Settings | File Templates. */@ContextConfiguration("/dbaccess/jdbctemplate.xml")@ActiveProfiles("dev")public class JdbcTemplateTests extends AbstractTestNGSpringContextTests {    private SpitterDAO spitterDAO;    private SimpleJdbcTemplate jdbcTemplate;    public SimpleJdbcTemplate getJdbcTemplate() {        return jdbcTemplate;    }    @Autowired    @Qualifier("jdbcTemplate")    public void setJdbcTemplate(SimpleJdbcTemplate jdbcTemplate) {        this.jdbcTemplate = jdbcTemplate;    }    public SpitterDAO getSpitterDAO() {        return spitterDAO;    }    @Autowired    @Qualifier("spitterDao")    public void setSpitterDAO(SpitterDAO spitterDAO) {        this.spitterDAO = spitterDAO;    }    @BeforeClass    public void init() {        jdbcTemplate.getJdbcOperations().execute("CREATE MEMORY TABLE SPITTER(ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,USER_NAME VARCHAR(128),FULL_NAME VARCHAR(128),EMAIL VARCHAR(128),PASSWORD VARCHAR(64))");    }    @AfterClass    public void teardown() {    }    @Test    public void testJdbcTemplate() {        Spitter spitter = new Spitter();        spitter.setEmail("jicui@ebay.com");        spitter.setFullName("Jason Cui");        spitter.setUserName("jicui");        spitter.setPassword("test123");        spitterDAO.add(spitter);        Spitter tmp = spitterDAO.getSpitterById(1L);        Assert.assertNotNull(tmp);        Assert.assertEquals(spitter.getUserName(), tmp.getUserName());        Assert.assertEquals(tmp.getId().longValue(), 1L);    }}